# Workloads information - localhost
---
globalVariables:
  namespace:             "yrn42website-ns"
  resourceGroup:         "yrn42website-rg"
  containerPrefix:       "yrn42website-prefix"
  registryName:          "componentsRegistry"
  # TO-SET: set domain below, like yrn42.com
  # websiteDomain:         "yrn42website-domain"
  websiteDomain:         "yrn42.com"
  # TO-SET: set site address below, like www.yrn42.com
  # websiteHost:           "www.yrn42website-domain"
  websiteHost:           "localhost"
  websiteTlsSecret:      "website-tls-secret"
  _registryLocation:     "$($([Environment]::GetEnvironmentVariable(\"${env:registryName}.registryLocation\")) -replace '.azurecr.io','')"
  dockerServer:          "http://${env:_registryLocation}"
  dockerUsername:        "placeholder"
  dockerPassword:        "placeholder"
  ingressClass:          "nginx"

workloads:
- context: "yrn42website-context"
  variables:
    _hostname: "$([Environment]::GetEnvironmentVariable(\"${env:contextName}.hostname\"))"
    _frontendIp: "$([Environment]::GetEnvironmentVariable(\"${env:contextName}.frontendIp\"))"
  deployments:
  # Uninstall previous workloads: idempotent
  - kubectl: "delete namespace ${env:namespace} --ignore-not-found=true --v=1"
  - kubectl: "delete namespace ingress-basic --ignore-not-found=true --v=1"
  - kubectl: "delete clusterrole nginx-ingress-ingress-nginx --ignore-not-found=true"
  - kubectl: "delete clusterrolebinding nginx-ingress-ingress-nginx --ignore-not-found=true"
  # Install dependencies
  - kubectl: "create namespace ${env:namespace} --v=1"
  - kubectl: "create namespace ingress-basic --v=1"
  - kubectl: "config set-context --current --namespace=${env:namespace} --v=1"
  - helm: "repo add ingress-nginx https://kubernetes.github.io/ingress-nginx"
  - helm: "repo update"
  # For localhost: create certificate
  - shell: "mkcert -install"
  - shell: "mkcert -key-file \"${env:workFolder}/website-tls.key\" -cert-file \"${env:workFolder}/website-tls.crt\" ${env:websiteDomain} \"*.${env:websiteDomain}\" localhost \"*.localhost\" 127.0.0.1 ::1 ${env:_hostname}"
  - kubectl: "create secret tls ${env:websiteTlsSecret} --key \"${env:workFolder}/website-tls.key\" --cert \"${env:workFolder}/website-tls.crt\" --namespace=${env:namespace}"
  - helm: >
      install nginx-ingress ingress-nginx/ingress-nginx
      --namespace ingress-basic
      --set controller.replicaCount=2
      --set controller.nodeSelector."beta\.kubernetes\.io/os"=linux
      --set defaultBackend.nodeSelector."beta\.kubernetes\.io/os"=linux
      --set controller.admissionWebhooks.enabled=false
      --set controller.ingressClass=${env:ingressClass}
      --set controller.service.loadBalancerIP="placeholder"
      --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-dns-label-name"="placeholder"
      # --debug
  # Install components
  - kubectl: "create secret docker-registry registry-credential --docker-server=${env:dockerServer} --docker-username=${env:dockerUsername} --docker-password=${env:dockerPassword}"
  - chart: "frontend/website"
    variables:
      installName: "yrn42website-install-website"
  - shell: "Write-Information \">> Enpoint: https://${env:websiteHost}\""
  - shell: 'Write-Information "-- Waiting: kubectl wait --for=condition=Ready pods --all --all-namespaces"'
  - kubectl: "wait --for=condition=Ready pods --all --all-namespaces"
  - shell: 'Write-Information "-- Check containers started: kubectl get pods --all-namespaces"'
  - shell: "Write-Information \">>    Test: curl -k -v http://${env:_frontendIp} -H 'Host: ${env:websiteHost}'\""
